# A small ttd (Token- and Type-Definitions) file defining a sequence of pairs

# TOKENS
    := "[ \n\r\t][ \n\r\t]*"
num := "[0-9][0-9]*"
id  := "[a-zA-Z][a-zA-Z0-9]*"
~   := "~"
(   := "\("
)   := "\)"
+   := "\+"
-   := "\-"
*   := "\*"
/   := "/"
,   := ","
%   := "%"

# TYPES
exp ::= ::add exp2 ::lhs + exp ::rhs
      | ::sub exp2 ::lhs - exp ::rhs
      | ::lvl exp2 ::exp
exp2 ::= ::mul exp3 ::lhs * exp2 ::rhs
       | ::div exp3 ::lhs / exp2 ::rhs
       | ::mod exp3 ::lhs % exp2 ::rhs :-> :"( ::lhs - ( ( ::lhs / ::rhs ) * ::rhs ) )"
       | ::lvl exp3 ::exp
exp3 ::= ::neg - exp3 ::exp :-> :"( 0 - ::exp )"
       | ::lvl exp4 ::exp
exp4 ::= ::num num ::val
       | ::par ( exp ::exp )
